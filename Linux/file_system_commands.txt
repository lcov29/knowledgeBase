cd <path>						change workind directory
mkdir <directory>					add new directory
mkdir -p <path> 					[option parents], add all nonexisting path directories
mkdir -p <path>/{folder_1,folder_n}/{1..n}		add multiple subdirectories
rmdir <directory>					delete empty directory
rmdir -p <path>						[option parents] delete all empty direcories in path
rm <filename>						remove file
rm -iv <filename>					remove file interactive (with prompt before removal) and print status to console
rm -rd <directory>					removes all files in <directory>, all subdirectories and <directory> recursivly
cp <old_file> <new_file>				copy <old_file> to location of <new_file>
cp -r <source_directory> <destination_directory>	copy content of <source_directory> recursivly into <destination_directory>
mv <file_1> <file_2>					move and rename <file_1> into <file_2>

ln <file>  [path/]<link_name>				create a hardlink to <file>
ln -s <file> [path/]<link_name>				create a symbolic link to <file>

chmod <[0-7][0-7][0-7] <file>				change privileges of <file> to the privileges represented as a three-digit number
								example:	set privileges of <file> to -rw-rw-r--
										(user u) rw-	(group g) rw-	(other o) r--
										(user u) 110	(group g) 110	(other o) 100
										(user u) 4+2=6	(group g) 4+2=6	(other o) 4
								--> chmod 664 <file>
chmod <user_class>[+ | - | =]<privilege> <file>		add, revoke or set privilege of <file> for specific <user_class>
								example:	chmod g+w test 		add write-privilege for test to group
										chmod o-x test		revoke execute-privilege for test from other
										chmod g=rw test		set privilege of test to read and write for group
chmod <user_class_1> =<user_class_2> <file>		set privilegs of <file> for <user_class_1> to privileges of <user_class_2> 
chown <new_owner>[:<group>] <file>			change ownership of <file> to <new_owner>
							optional: change also group of <file> to <group>
chgrp <group> <file>					change group of <file> to <group>
				
